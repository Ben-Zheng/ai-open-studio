load("@io_bazel_rules_go//go:def.bzl", "go_library")

go_library(
    name = "go_default_library",
    srcs = [
        "check_quota.go",
        "controller_manager.go",
        "events.go",
        "helper.go",
        "lister.go",
        "prometheus.go",
        "quota.go",
        "reconcile.go",
        "resourcesense.go",
        "scheme.go",
        "syncers.go",
        "tenant.go",
        "user.go",
        "webhook.go",
    ],
    importpath = "go.megvii-inc.com/brain/brainpp/projects/aiservice/resourcesense/pkg/controller/quota",
    visibility = ["//visibility:public"],
    deps = [
        "//projects/aiservice/auth/pkg/api/v1:go_default_library",
        "//projects/aiservice/auth/pkg/app/types:go_default_library",
        "//projects/aiservice/components/pkg/controller/util:go_default_library",
        "//projects/aiservice/datahub/pkg/datahub-apiserver/api/v1:go_default_library",
        "//projects/aiservice/datahub/pkg/datahub-apiserver/types/ctx:go_default_library",
        "//projects/aiservice/pkg/dataselect:go_default_library",
        "//projects/aiservice/pkg/features:go_default_library",
        "//projects/aiservice/pkg/ginlib:go_default_library",
        "//projects/aiservice/pkg/types:go_default_library",
        "//projects/aiservice/pkg/utils:go_default_library",
        "//projects/aiservice/pkg/utils/k8s:go_default_library",
        "//projects/aiservice/resourcesense/pkg/consts:go_default_library",
        "//projects/aiservice/resourcesense/pkg/controller/resource:go_default_library",
        "//projects/aiservice/resourcesense/pkg/types:go_default_library",
        "//projects/aiservice/resourcesense/pkg/types/quota:go_default_library",
        "//projects/aiservice/resourcesense/pkg/utils:go_default_library",
        "@com_github_apex_log//:go_default_library",
        "@com_github_prometheus_client_golang//prometheus:go_default_library",
        "@com_github_prometheus_client_golang//prometheus/promhttp:go_default_library",
        "@com_github_sirupsen_logrus//:go_default_library",
        "@io_k8s_api//admission/v1:go_default_library",
        "@io_k8s_api//admissionregistration/v1:go_default_library",
        "@io_k8s_api//core/v1:go_default_library",
        "@io_k8s_apimachinery//pkg/api/errors:go_default_library",
        "@io_k8s_apimachinery//pkg/api/resource:go_default_library",
        "@io_k8s_apimachinery//pkg/apis/meta/v1:go_default_library",
        "@io_k8s_apimachinery//pkg/fields:go_default_library",
        "@io_k8s_apimachinery//pkg/labels:go_default_library",
        "@io_k8s_apimachinery//pkg/runtime:go_default_library",
        "@io_k8s_apimachinery//pkg/runtime/serializer:go_default_library",
        "@io_k8s_apimachinery//pkg/selection:go_default_library",
        "@io_k8s_apimachinery//pkg/util/runtime:go_default_library",
        "@io_k8s_apimachinery//pkg/util/wait:go_default_library",
        "@io_k8s_apiserver//pkg/registry/generic:go_default_library",
        "@io_k8s_apiserver//pkg/server/healthz:go_default_library",
        "@io_k8s_client_go//informers:go_default_library",
        "@io_k8s_client_go//informers/core/v1:go_default_library",
        "@io_k8s_client_go//kubernetes:go_default_library",
        "@io_k8s_client_go//listers/core/v1:go_default_library",
        "@io_k8s_client_go//tools/cache:go_default_library",
        "@io_k8s_client_go//util/workqueue:go_default_library",
        "@io_k8s_kubernetes//pkg/quota/v1/evaluator/core:go_default_library",
        "@io_k8s_utils//clock:go_default_library",
        "@org_golang_x_time//rate:go_default_library",
        "@org_mongodb_go_mongo_driver//bson:go_default_library",
        "@org_mongodb_go_mongo_driver//bson/primitive:go_default_library",
        "@org_mongodb_go_mongo_driver//mongo:go_default_library",
        "@org_mongodb_go_mongo_driver//mongo/options:go_default_library",
        "@org_mongodb_go_mongo_driver//mongo/readconcern:go_default_library",
        "@org_mongodb_go_mongo_driver//mongo/writeconcern:go_default_library",
    ],
)

filegroup(
    name = "package-srcs",
    srcs = glob(["**"]),
    tags = ["automanaged"],
    visibility = ["//visibility:private"],
)

filegroup(
    name = "all-srcs",
    srcs = [
        ":package-srcs",
        "//projects/aiservice/resourcesense/pkg/controller/quota/datasetstorage:all-srcs",
    ],
    tags = ["automanaged"],
    visibility = ["//visibility:public"],
)
